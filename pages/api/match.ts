// pages/api/match.ts
import type { NextApiRequest, NextApiResponse } from 'next';
import { supabase } from '../../lib/supabaseClient';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'POST') {
    res.setHeader('Allow', ['POST']);
    return res.status(405).json({ message: 'Method Not Allowed' });
  }

  const { buyer_id, part_id, status } = req.body;

  // Eksik veri kontrolÃ¼
  if (!buyer_id || !part_id || !status) {
    return res.status(400).json({ message: 'Eksik bilgi gÃ¶nderildi.' });
  }

  try {
    const { error } = await supabase.from('matches').insert([
      {
        buyer_id,
        part_id: Number(part_id), // ğŸ‘ˆ bigint'e dÃ¶nÃ¼ÅŸtÃ¼rÃ¼yoruz
        status,
      },
    ]);

    if (error) {
      // Unique constraint ihlali (aynÄ± kullanÄ±cÄ± aynÄ± parÃ§aya tekrar oy verirse)
      if (error.code === '23505') {
        return res.status(400).json({ message: 'Bu Ã¼rÃ¼n iÃ§in ilgileniyoruma tÄ±klamÄ±ÅŸtÄ±nÄ±z' });
      }

      console.error('Supabase Match Insert Error:', error);
      return res.status(500).json({ message: 'EÅŸleÅŸme eklenirken hata oluÅŸtu', error });
    }

    return res.status(200).json({ message: 'EÅŸleÅŸme kaydedildi' });
  } catch (err) {
    console.error('Sunucu hatasÄ±:', err);
    return res.status(500).json({ message: 'Sunucu hatasÄ± oluÅŸtu' });
  }
}